{
	"info": {
		"_postman_id": "e7e9d67c-483f-4f1a-a97b-32dfab43715c",
		"name": "Cinema App",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44114619"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "register",
					"item": [
						{
							"name": "Creating new user",
							"item": [
								{
									"name": "Valid registration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const json = pm.response.json();\r",
													"pm.environment.set(\"user_email\", json.data.email);\r",
													"pm.environment.set(\"token_user\", json.data.token);\r",
													"pm.environment.set(\"user_id\", json.data.id);\r",
													"pm.test(\"Status 201 - Registro vÃ¡lido\", () => pm.response.to.have.status(201));\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followAuthorizationHeader": true
									},
									"request": {
										"auth": {
											"type": "bearer"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Hannah QA\",\r\n  \"email\": \"{{user_email}}\",\r\n  \"password\": \"{{user_password}}\",\r\n  \"role\":   \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/auth/register",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"auth",
												"register"
											]
										}
									},
									"response": [
										{
											"name": "Valid registration",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"Hannah QA\",\r\n  \"email\": \"{{user_email}}\",\r\n  \"password\": \"{{user_password}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/register",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"register"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "319"
												},
												{
													"key": "ETag",
													"value": "W/\"13f-lQRsZues29ZkI8i1bNC2OTmjcEI\""
												},
												{
													"key": "Date",
													"value": "Thu, 03 Jul 2025 06:32:56 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"success\": true,\n    \"data\": {\n        \"_id\": \"68662417d9162bf061928a8e\",\n        \"name\": \"Hannah QA\",\n        \"email\": \"hannah_qa_1751524375046@example.com\",\n        \"role\": \"user\",\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjYyNDE3ZDkxNjJiZjA2MTkyOGE4ZSIsImlhdCI6MTc1MTUyNDM3NiwiZXhwIjoxNzUxNjEwNzc2fQ.e5vXluZE7KW433BpL63yL5xLOMd_f20UGE5KTj5XkF0\"\n    }\n}"
										}
									]
								},
								{
									"name": "Duplicate email",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_admin}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Hannah QA\",\r\n  \"email\": \"hannah_qa_1751525085803@example.com\",\r\n  \"password\": \"{{user_password}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/auth/register",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"auth",
												"register"
											]
										}
									},
									"response": [
										{
											"name": "Duplicate email",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"Hannah QA\",\r\n  \"email\": \"hannah_qa_1751525085803@example.com\",\r\n  \"password\": \"{{user_password}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/register",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"register"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "49"
												},
												{
													"key": "ETag",
													"value": "W/\"31-WKEMg8zALB1Ko0WjUHi/6RBGHVc\""
												},
												{
													"key": "Date",
													"value": "Thu, 03 Jul 2025 06:46:04 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"success\": false,\n    \"message\": \"User already exists\"\n}"
										}
									]
								},
								{
									"name": "Invalid email format",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Teste Malformado\",\r\n  \"email\": \"semarroba.com\",\r\n  \"password\": \"{{user_password}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/auth/register",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"auth",
												"register"
											]
										}
									},
									"response": [
										{
											"name": "Invalid email format",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"Teste Malformado\",\r\n  \"email\": \"semarroba.com\",\r\n  \"password\": \"{{user_password}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/register",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"register"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "97"
												},
												{
													"key": "ETag",
													"value": "W/\"61-Krv9gnZpw94ZcTkLQB5OMXVuBok\""
												},
												{
													"key": "Date",
													"value": "Thu, 03 Jul 2025 06:52:58 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"success\": false,\n    \"message\": \"Validation failed\",\n    \"errors\": {\n        \"email\": \"Please provide a valid email\"\n    }\n}"
										}
									]
								},
								{
									"name": "Weak password",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"timestamp\", Date.now());\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Senha Fraca\",\r\n  \"email\": \"senha_fraca_{{timestamp}}@example.com\",\r\n  \"password\": \"123\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/auth/register",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"auth",
												"register"
											]
										}
									},
									"response": [
										{
											"name": "Weak password",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"Senha Fraca\",\r\n  \"email\": \"senha_fraca_{{timestamp}}@example.com\",\r\n  \"password\": \"123\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/register",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"register"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "115"
												},
												{
													"key": "ETag",
													"value": "W/\"73-2kjRr4xheMpIIlrrmnuX+9CkBCA\""
												},
												{
													"key": "Date",
													"value": "Thu, 03 Jul 2025 06:53:42 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"success\": false,\n    \"message\": \"Validation failed\",\n    \"errors\": {\n        \"password\": \"Password must be at least 6 characters long\"\n    }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "me",
					"item": [
						{
							"name": "Get profile",
							"item": [
								{
									"name": "With valid token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status 200 - Perfil acessado\", () => pm.response.to.have.status(200));\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/auth/me",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"auth",
												"me"
											]
										}
									},
									"response": []
								},
								{
									"name": "Without token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status 401 - Token ausente\", () => {\r",
													"  pm.response.to.have.status(401);\r",
													"  pm.expect(pm.response.text()).to.include(\"Not authorized, no token\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/auth/me",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"auth",
												"me"
											]
										}
									},
									"response": [
										{
											"name": "Without token",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{base_url}}/auth/me",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"me"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "65"
												},
												{
													"key": "ETag",
													"value": "W/\"41-TJq3LYiwj1On+7IZ17oLU5tM1Zs\""
												},
												{
													"key": "Date",
													"value": "Thu, 03 Jul 2025 07:04:29 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"success\": false,\n    \"message\": \"Not authorized to access this route\"\n}"
										}
									]
								},
								{
									"name": "With invalid token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status 403 - Token invÃ¡lido\", () => {\r",
													"  pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{invalid_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/auth/me",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"auth",
												"me"
											]
										}
									},
									"response": [
										{
											"name": "With invalid token",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{base_url}}/auth/me",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"me"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "65"
												},
												{
													"key": "ETag",
													"value": "W/\"41-TJq3LYiwj1On+7IZ17oLU5tM1Zs\""
												},
												{
													"key": "Date",
													"value": "Thu, 03 Jul 2025 07:05:42 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"success\": false,\n    \"message\": \"Not authorized to access this route\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "login",
					"item": [
						{
							"name": "Valid credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const json = pm.response.json();\r",
											"pm.environment.set(\"token_user\", json.token);\r",
											"pm.test(\"Status 200 - Login bem-sucedido\", () => pm.response.to.have.status(200));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"hannah_qa_1751525085803@example.com\",\r\n  \"password\": \"{{user_password}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/auth/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": [
								{
									"name": "Valid credentials",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"hannah_qa_1751525085803@example.com\",\r\n  \"password\": \"{{user_password}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/auth/login",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "319"
										},
										{
											"key": "ETag",
											"value": "W/\"13f-bAdcgYGz8ttVR14rXH00EDZpjgc\""
										},
										{
											"key": "Date",
											"value": "Thu, 03 Jul 2025 07:21:59 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"_id\": \"686626ddd9162bf061928a9a\",\n        \"name\": \"Hannah QA\",\n        \"email\": \"hannah_qa_1751525085803@example.com\",\n        \"role\": \"user\",\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NjYyNmRkZDkxNjJiZjA2MTkyOGE5YSIsImlhdCI6MTc1MTUyNzMxOSwiZXhwIjoxNzUxNjEzNzE5fQ.edhuBWBXRyzkVovD4qkmq472cKE7k9Z_nVmleHH9l-k\"\n    }\n}"
								}
							]
						},
						{
							"name": "Invalid password",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"{{user_email}}\",\r\n  \"password\": \"senhaErrada123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/auth/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": [
								{
									"name": "Invalid password",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"{{user_email}}\",\r\n  \"password\": \"senhaErrada123\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/auth/login",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "55"
										},
										{
											"key": "ETag",
											"value": "W/\"37-5uDpJTljPBecOPs/j7OXFdPRcmQ\""
										},
										{
											"key": "Date",
											"value": "Thu, 03 Jul 2025 07:24:49 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"message\": \"Invalid email or password\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "profile",
					"item": [
						{
							"name": "Update profile with valid data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 200 - Nome atualizado\", () => pm.response.to.have.status(200));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NWMyODc4ZjNkNmE3NTYyMmZiMDY4MSIsImlhdCI6MTc1MDg3NTQzOSwiZXhwIjoxNzUwOTYxODM5fQ.m1rupTulF1kf89NDvL8lqp6-AboEulYj4Xo1rweHfw8",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Hannah QA Atualizada\",\r\n  \"CurrentEmail\": {{user_email}},\r\n  \"currentPassword\": \"{{user_password}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/auth/profile",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"profile"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "movies",
			"item": [
				{
					"name": "Create Movie",
					"item": [
						{
							"name": "Valid movie creation (admin)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const json = pm.response.json();\r",
											"pm.environment.set(\"movie_id\", json.data._id);\r",
											"pm.test(\"Status 201 - Filme criado com sucesso\", () => {\r",
											"  pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_admin}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"O Jogo da ImitaÃ§Ã£o\",\r\n  \"synopsis\": \"A histÃ³ria de Alan Turing...\",\r\n  \"director\": \"Morten Tyldum\",\r\n  \"genres\": [\"Drama\", \"Biografia\"],\r\n  \"duration\": 113,\r\n  \"classification\": \"PG-13\",\r\n  \"poster\": \"imitationgame.jpg\",\r\n  \"releaseDate\": \"2014-11-28\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/movies",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"movies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Without token (unauthorized)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 401 - Unauthorized\", () => {\r",
											"  pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"O Jogo da ImitaÃ§Ã£o\",\r\n  \"synopsis\": \"A histÃ³ria de Alan Turing...\",\r\n  \"director\": \"Morten Tyldum\",\r\n  \"genres\": [\"Drama\", \"Biografia\"],\r\n  \"duration\": 113,\r\n  \"classification\": \"PG-13\",\r\n  \"poster\": \"imitationgame.jpg\",\r\n  \"releaseDate\": \"2014-11-28\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/movies",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"movies"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit Movie",
					"item": [
						{
							"name": "Update movie with valid ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 200 - Filme atualizado\", () => {\r",
											"  pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_admin}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"O Jogo da ImitaÃ§Ã£o\",\r\n  \"synopsis\": \"A histÃ³ria de Alan Turing...\",\r\n  \"director\": \"Morten Tyldum\",\r\n  \"genres\": [\"Drama\", \"Biografia\"],\r\n  \"duration\": 120,\r\n  \"classification\": \"PG-13\",\r\n  \"poster\": \"imitationgame.jpg\",\r\n  \"releaseDate\": \"2014-11-28\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/movies/{{movie_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"movies",
										"{{movie_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Movie",
					"item": [
						{
							"name": "List all movies",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 200 - Lista de filmes carregada\", () => {\r",
											"  pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NWMyODc4ZjNkNmE3NTYyMmZiMDY4MSIsImlhdCI6MTc1MDg3MzQ4NCwiZXhwIjoxNzUwOTU5ODg0fQ.FvAokGgLvyCDEHsr5zX2oSfAnVwzoeQf1VRF1UbFqIM",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/movies",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"movies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get movie by valid ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 200 - Detalhes do filme retornados\", () => {\r",
											"  pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}//movies/{{movie_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"",
										"movies",
										"{{movie_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get movie with invalid ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 400 - ID invÃ¡lido\", () => {\r",
											"  pm.response.to.have.status(400);\r",
											"  pm.expect(pm.response.text()).to.include(\"Invalid movie ID\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NWM1MjE4ZjNkNmE3NTYyMmZiMDdmOCIsImlhdCI6MTc1MDg4MTg1MiwiZXhwIjoxNzUwOTY4MjUyfQ.8-ii4WO8ujrsgYKlOLAzwnFGM6Zyz29czcqAk6NBvAk",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/movies/abc123",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"movies",
										"abc123"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete Movie",
					"item": [
						{
							"name": "Delete movie by ID (admin)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 200 - Filme removido\", () => {\r",
											"  pm.response.to.have.status(200);\r",
											"  pm.expect(pm.response.text()).to.include(\"Movie removed\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_admin}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/movies/685c5652f3d6a75622fb0837",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"movies",
										"685c5652f3d6a75622fb0837"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "theaters",
			"item": [
				{
					"name": "Create Theater",
					"item": [
						{
							"name": "Valid creation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const json = pm.response.json();\r",
											"pm.environment.set(\"theater_id\", json.data._id);\r",
											"pm.environment.set(\"theater_with_session\", json.data.theater._id);\r",
											"pm.test(\"Status 201 - Cinema criado\", () => {\r",
											"  pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_admin}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Cine QA Plaza\",\r\n  \"capacity\": 150,\r\n  \"type\": \"IMAX\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/theaters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"theaters"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing required field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 400 - Campo obrigatÃ³rio ausente\", () => {\r",
											"  pm.response.to.have.status(400);\r",
											"  pm.expect(pm.response.text()).to.include(\"Theater name is required\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_admin}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"capacity\": 100,\r\n  \"type\": \"standard\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/theaters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"theaters"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update Theater",
					"item": [
						{
							"name": "Update theater data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 200 - Cinema atualizado\", () => {\r",
											"  pm.response.to.have.status(200);\r",
											"  const json = pm.response.json();\r",
											"  pm.expect(json.data.name).to.eql(\"Cine QA Plaza Atualizado\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_admin}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Cine QA Plaza Atualizado\",\r\n  \"capacity\": 200,\r\n  \"type\": \"standard\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/theaters/{{theater_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"theaters",
										"{{theater_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Theater",
					"item": [
						{
							"name": "List all theaters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 200 - Lista de cinemas\", () => {\r",
											"  pm.response.to.have.status(200);\r",
											"  const json = pm.response.json();\r",
											"  pm.expect(json.data).to.be.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_admin}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/theaters",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"theaters"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete Theater",
					"item": [
						{
							"name": "Valid deletion",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 200 - Cinema excluÃ­do com sucesso\", () => {\r",
											"  pm.response.to.have.status(200);\r",
											"  pm.expect(pm.response.text()).to.include(\"Theater deleted successfully\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_admin}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/theaters/{{theater_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"theaters",
										"{{theater_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deletion with active sessions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 409 - Cinema vinculado a sessÃµes\", () => {\r",
											"  pm.response.to.have.status(409);\r",
											"  pm.expect(pm.response.text()).to.include(\"Cannot delete theater with active sessions\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_admin}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/theaters/{{theater_with_session}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"theaters",
										"{{theater_with_session}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "sessions",
			"item": [
				{
					"name": "Create Session",
					"item": [
						{
							"name": "Create session with valid data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const json = pm.response.json();\r",
											"pm.environment.set(\"session_id\", json.data._id);\r",
											"pm.test(\"Status 201 - SessÃ£o criada\", () => {\r",
											"  pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_admin}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\nÂ  Â  \"movie\": {\r\nÂ  Â  Â  Â  \"_id\": \"685af8b2dd66e8849ea14e0f\",\r\nÂ  Â  Â  Â  \"title\": \"O Jogo da ImitaÃ§Ã£o\",\r\nÂ  Â  Â  Â  \"duration\": 113,\r\nÂ  Â  Â  Â  \"poster\": \"imitationgame.jpg\",\r\nÂ  Â  Â  Â  \"id\": \"685af8b2dd66e8849ea14e0f\"\r\nÂ    },\r\n    \"theater\": {\r\n        \"_id\": \"685af8b2dd66e8849ea14e14\",\r\n        \"name\": \"Theater QA\",\r\n        \"type\": \"IMAX\",\r\n        \"id\": \"685af8b2dd66e8849ea14e14\"\r\n    },    \r\n  \"datetime\": \"2025-06-28T21:08:23.739Z\",\r\n  \"fullPrice\": 20,\r\n  \"halfPrice\": 10\r\n  \"seats\": [\r\n        {\r\n            \"row\": \"A\",\r\n            \"number\": 1,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"A\",\r\n            \"number\": 2,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"A\",\r\n            \"number\": 3,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"A\",\r\n            \"number\": 4,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"A\",\r\n            \"number\": 5,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"A\",\r\n            \"number\": 6,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"A\",\r\n            \"number\": 7,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"A\",\r\n            \"number\": 8,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"A\",\r\n            \"number\": 9,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"A\",\r\n            \"number\": 10,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"B\",\r\n            \"number\": 11,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"B\",\r\n            \"number\": 12,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"B\",\r\n            \"number\": 33,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"B\",\r\n            \"number\": 14,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"B\",\r\n            \"number\": 15,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"B\",\r\n            \"number\": 16,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"B\",\r\n            \"number\": 17,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"B\",\r\n            \"number\": 18,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"B\",\r\n            \"number\": 19,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"B\",\r\n            \"number\": 20,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"C\",\r\n            \"number\": 21,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"C\",\r\n            \"number\": 22,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"C\",\r\n            \"number\": 23,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"C\",\r\n            \"number\": 24,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"C\",\r\n            \"number\": 25,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"C\",\r\n            \"number\": 26,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"C\",\r\n            \"number\": 27,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"C\",\r\n            \"number\": 28,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"C\",\r\n            \"number\": 29,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"C\",\r\n            \"number\": 30,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"D\",\r\n            \"number\": 31,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"D\",\r\n            \"number\": 32,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"D\",\r\n            \"number\": 33,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"D\",\r\n            \"number\": 34,\r\n            \"status\": \"available\"\r\n        },\r\n        {\r\n            \"row\": \"D\",\r\n            \"number\": 35,\r\n            \"status\": \"available\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/sessions",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"sessions"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Session",
					"item": [
						{
							"name": "List all sessions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 200 - SessÃµes listadas\", () => {\r",
											"  pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/sessions",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"sessions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get reserved seats by session ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 200 - Assentos listados\", () => {\r",
											"  pm.response.to.have.status(200);\r",
											"  pm.expect(pm.response.json().seats).to.be.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/sessions/{{session_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"sessions",
										"{{session_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Reset Session",
					"item": [
						{
							"name": "Reset all seats in session",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 200 - Assentos resetados\", () => {\r",
											"  pm.response.to.have.status(200);\r",
											"  pm.expect(pm.response.text()).to.include(\"All seats reset to available\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_admin}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "{SESSION_ID}",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/sessions/{{session_id}}/reset-seats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"sessions",
										"{{session_id}}",
										"reset-seats"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete Session",
					"item": [
						{
							"name": "Delete session by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 200 - SessÃ£o deletada\", () => {\r",
											"  pm.response.to.have.status(200);\r",
											"  pm.expect(pm.response.text()).to.include(\"Session deleted successfully\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_admin}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/sessions/{{session_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"sessions",
										"{{session_id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "reservations",
			"item": [
				{
					"name": "Create Reservation",
					"item": [
						{
							"name": "Valid seat reservation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const json = pm.response.json();\r",
											"pm.environment.set(\"reservation_id\", json.data._id);\r",
											"pm.environment.set(\"user_with_reservation\", json.data.user._id);\r",
											"pm.test(\"Status 201 - Reserva registrada\", () => {\r",
											"  pm.response.to.have.status(201);\r",
											"  pm.expect(json.data.seats.length).to.equal(2);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"session\": \"{{session_id}}\",\r\n  \"seats\": [\r\n    { \"row\": \"C\", \"number\": 21, \"type\": \"full\" },\r\n    { \"row\": \"C\", \"number\": 22, \"type\": \"half\" }\r\n  ],\r\n  \"paymentMethod\": \"credit_card\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/reservations",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reserve already taken seats",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 400 - Assentos jÃ¡ reservados\", () => {\r",
											"  pm.response.to.have.status(400);\r",
											"  pm.expect(pm.response.text()).to.include(\"occupied\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"session\": \"{{session_id}}\",\r\n  \"seats\": [\r\n    {\"row\": \"C\", \"number\": 21, \"type\": \"full\"},\r\n    {\"row\": \"C\", \"number\": 22, \"type\": \"half\"}\r\n  ],\r\n  \"paymentMethod\": \"credit_card\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/reservations",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"reservations"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete Reservation",
					"item": [
						{
							"name": "Cancel reservation by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 200 - Reserva excluÃ­da com sucesso\", () => {\r",
											"  pm.response.to.have.status(200);\r",
											"  pm.expect(pm.response.text()).to.include(\"Reservation deleted successfully\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/reservations/{{reservation_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"reservations",
										"{{reservation_id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "Get Users",
					"item": [
						{
							"name": "List all users (admin)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 200 - Lista de usuÃ¡rios\", () => {\r",
											"  pm.response.to.have.status(200);\r",
											"  const json = pm.response.json();\r",
											"  pm.expect(json.data).to.be.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_admin}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unauthorized access",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 401 - Sem token\", () => {\r",
											"  pm.response.to.have.status(401);\r",
											"  pm.expect(pm.response.text()).to.include(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete User",
					"item": [
						{
							"name": "Valid deletion",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 200 - UsuÃ¡rio excluÃ­do com sucesso\", () => {\r",
											"  pm.response.to.have.status(200);\r",
											"  pm.expect(pm.response.text()).to.include(\"User deleted successfully\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_admin}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/sessions/{{user_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"sessions",
										"{{user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deletion with active reservations",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status 409 - UsuÃ¡rio com reservas ativas\", () => {\r",
											"  pm.response.to.have.status(409);\r",
											"  pm.expect(pm.response.text()).to.include(\"Cannot delete user with active reservations\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_admin}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/sessions/{{user_with_reservation}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"sessions",
										"{{user_with_reservation}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}